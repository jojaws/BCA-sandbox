public without sharing class ViewRegistration_List {
    public String contactUserId { get; set; }
    public String EventId { get; set; }
    public Contact con { get; set; }
    public BCAP_Event__c bcaEvent { get; set; }

    // Used by your VF table (kept same name so no VF changes required)
    public List<Event_Registration__c> EvntRegConfirmList { get; set; }
    // New: explicit declined list (handy for badges in a toggle UI)
    public List<Event_Registration__c> EvntRegDeclinedList { get; set; }

    public Integer TotalReg { get; set; }
    public String profilePhotoId { get; set; }

    // New: which list is currently displayed on the page
    // Values: 'Confirmed' or 'Declined'
    public String statusFilter { get; set; }

    public ViewRegistration_List() {
        // defaults
        con = new Contact();
        bcaEvent = new BCAP_Event__c();
        EvntRegConfirmList = new List<Event_Registration__c>();
        EvntRegDeclinedList = new List<Event_Registration__c>();
        TotalReg = 0;
        statusFilter = 'Confirmed';

        // URL params (keep your original names)
        contactUserId = ApexPages.CurrentPage().getParameters().get('UserId');
        EventId = ApexPages.CurrentPage().getParameters().get('EventId');

        // Deep-link support: ?status=Declined
        String s = ApexPages.CurrentPage().getParameters().get('status');
        if (!String.isBlank(s) && s.equalsIgnoreCase('Declined')) {
            statusFilter = 'Declined';
        }

        // Load Contact (guard if null)
        if (!String.isBlank(contactUserId)) {
            try {
                con = [
                    SELECT Id, Name, Account.Name, AccountId, Title, Phone, Email, PhotoUrl
                    FROM Contact
                    WHERE Id = :contactUserId
                    LIMIT 1
                ];
            } catch (Exception e) {
                // leave default contact; not fatal for the page
            }
        }

        // Load Event (must have EventId)
        if (!String.isBlank(EventId)) {
            bcaEvent = [
                SELECT Id, Name, Event_Date__c, Dress_Code__c, Event_Description__c,
                       Event_Type__r.Name, Event_Type__c, Deadline_to_register__c, Host_Account__c,
                       Parking__c, Invite_Only__c, Publish_to_Portal__c, Start_Time__c, Venue__c,
                       Venue_Address__c, End_Time__c, Directions__c, Attendance_Criteria__c, Speaker_Bio__c
                FROM BCAP_Event__c
                WHERE Id = :EventId
                LIMIT 1
            ];

            // Build the two lists up front (no SOQL in getters)
            loadConfirmedOrAttended();
            loadDeclined();

            // Decide which list to show + total
            applyFilterToDisplay();
        }

        // Try to get headshot attachment (optional)
        try {
            profilePhotoId = '/servlet/servlet.FileDownload?file=' +
                [SELECT Id FROM Attachment WHERE ParentId = :contactUserId AND Name LIKE '%headshot.jpg' LIMIT 1].Id;
        } catch (Exception e) {
            profilePhotoId = null;
        }
    }

    // === Queries ===

    // If event in past: Attended__c = true
    // Else: Status__c = 'Confirmed'
    private void loadConfirmedOrAttended() {
        Boolean isPast = (bcaEvent != null && bcaEvent.Event_Date__c < Date.today());

        String baseSelect =
            'SELECT Id, Contact__r.Name, Attendance_Type__c,' +
            '       Contact__r.Account.Name,' +
            '       Member_Block__r.Account__r.Name, Member_Block__r.Account__r.Id,' +
            '       Guest_Of__r.Name,' +
            '       Contact__r.FirstName, Contact__r.LastName,' +
            '       Contact__r.Title, Contact__r.Phone, Contact__r.Email,' +
            '       Event__c, Attended__c, Status__c ' +
            'FROM Event_Registration__c ' +
            'WHERE Event__c = :EventId ';

        if (isPast) {
            EvntRegConfirmList = Database.query(
                baseSelect +
                'AND Attended__c = true ' +
                'ORDER BY Member_Block__r.Account__r.Name, Contact__r.LastName'
            );
        } else {
            EvntRegConfirmList = Database.query(
                baseSelect +
                'AND Status__c = \'Confirmed\' ' +
                'ORDER BY Member_Block__r.Account__r.Name, Contact__r.LastName'
            );
        }
    }

    private void loadDeclined() {
        EvntRegDeclinedList = [
            SELECT Id, Contact__r.Name, Attendance_Type__c,
                   Contact__r.Account.Name,
                   Member_Block__r.Account__r.Name, Member_Block__r.Account__r.Id,
                   Guest_Of__r.Name,
                   Contact__r.FirstName, Contact__r.LastName,
                   Contact__r.Title, Contact__r.Phone, Contact__r.Email,
                   Event__c, Attended__c, Status__c
            FROM Event_Registration__c
            WHERE Event__c = :EventId
              AND Status__c = 'Declined'
            ORDER BY Member_Block__r.Account__r.Name, Contact__r.LastName
        ];
    }

    // === Filter handling ===

    private void applyFilterToDisplay() {
        if (statusFilter == 'Declined') {
            TotalReg = EvntRegDeclinedList.size();
            // Important: keep the same VF binding name but swap the data it points to
            EvntRegConfirmList = EvntRegDeclinedList;
        } else {
            TotalReg = EvntRegConfirmList.size();
            // EvntRegConfirmList already holds Confirmed/Attended
        }
    }

    // Expose actions you can wire to <apex:commandLink> for a toggle UI
    public PageReference setFilterConfirmed() {
        statusFilter = 'Confirmed';
        // Reuse existing lists; no requery needed
        applyFilterToDisplay();
        return null;
    }

    public PageReference setFilterDeclined() {
        statusFilter = 'Declined';
        applyFilterToDisplay();
        return null;
    }

    // === Existing navigation ===
    public PageReference invitesomeoneelse() {
        return new PageReference('/Eventdetails?EventId=' + EventId + '&UserId=' + con.Id);
    }
}
